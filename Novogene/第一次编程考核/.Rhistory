1+1
getwd()
wode<-function(x,y){}
wode<-function(x,y){
return x+y
}
wode<-function(x,y){
return x+y
}
wode<-function(x,y){
return(x+y)
}
wode(33,66)
1+1
f <- function()
f <- function(){}
wode<-function(x,y){
return(x+y)
}
wode(1,2)
y<-seq(-5,5,by=1)
y
z<-rep(c(1,4,6),time=3)
z
cells<-c(1,26,24,68)
rnames<-c("R1","R2")
cnames<-c("C1","C2")
matrix(cells, nrow=2, ncol=2, byrow=TRUE, dimnames=list(rnames, cnames))
df<-data.frame(
Name=c("Alice", "Becka", "James", "Jeffrey", "John"),
Sex=c("F", "F", "M", "M", "M"),
Age=c(13,13,12,13,12),
Height=c(56.5,65.3,57.3,62.5,59.0),
Weight=c(84,98,83,84,99)
)
df
lst<-list(name='fred',wife='mary',no.children=3,child.ages=c(4,7,9))
lst
rpkm<-read.table('rpkm.xls',header=T,row.names=1)
?write.table()
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
data(packase='ggplot2')
data(package='ggplot2')
?data(package='ggplot2')
library(ggplot2)
data(package='ggplot2')
head(diamonds)
p<-ggplot(diamonds,aes(x=carat))
p+geom_histogram(binwidth=0.1,aes(fill=cut),position='dodge')+xlim(0,3)+coord_flip()+facet_grid(.~cut)
?coord_flip()
?facet_grid()
library(ggplot2)
data(package='ggplot2')
head(diamonds)
p<-ggplot(diamonds,aes(x=carat))
p+geom_histogram(binwidth=0.1,aes(fill=cut),position='dodge')+xlim(0,3)+coord_flip()+facet_grid(.~cut)
library(ggplot2)
data(package='ggplot2')
head(diamonds)
p<-ggplot(diamonds,aes(x=carat))
p+geom_histogram(binwidth=0.1,aes(fill=cut),position='dodge')+xlim(0,3)+coord_flip()+facet_grid(~cut)
?theme()
p<-ggplot(mpg,aes(x=maunfacturer))
p+geom_bar(aes(fill=factor(year)),position="dodge")
p+geom_bar(aes(fill=factor(year)),position="dodge")+theme(axis.text.x=element_text(hjust=1,angle=45))
p<-ggplot(mpg,aes(x=manufacturer))
p+geom_bar(aes(fill=factor(year)),position="dodge")
p+geom_bar(aes(fill=factor(year)),position="dodge")+theme(axis.text.x=element_text(hjust=1,angle=45))
getwd()
head(mpg)
p<-ggplot(mpg,aes(x=cty,y=hwy))
p+geom_point(color='red',shape=4)+geom_smooth(method='lm')+annotate("text",15,44,label=paste("Pearson's r:",r),size=3,colour='blue')
p+geom_point(color='red',shape=4)+geom_smooth(method='lm')+annotate("text",15,44,label=paste("Pearson'sr:",r),size=3,colour='blue')
?annotate()
p<-ggplot(mpg,aes(x=cty,y=hwy))
r<-round(cor(mpg$cty,mpg$hwy),3)
p+geom_point(color='red',shape=4)+geom_smooth(method='lm')+annotate("text",15,44,label=paste("Pearson's r:",r),size=3,colour='blue')
?annotate()
p<-ggplot(mpg,aes(x=cty,y=hwy))
r<-round(cor(mpg$cty,mpg$hwy),3)
p+geom_point(color='red',shape=4)+geom_smooth(method='lm')+annotate("text",44,44,label=paste("Pearson's r:",r),size=3,colour='blue')
p<-ggplot(mpg,aes(x=cty,y=hwy))
r<-round(cor(mpg$cty,mpg$hwy),3)
p+geom_point(color='red',shape=4)+geom_smooth(method='lm')+annotate("text",15,44,label=paste("Pearson's r:",r),size=3,colour='blue')
p<-ggplot(mpg,aes(x=cty,y=hwy,colour=factor(cyl)))+geom_point()
p
p+stat_smooth(method='lm')
p<-ggplot(mpg,aes(x=cty,y=hwy,colour=factor(cyl)))+geom_point()
p+scale_color_manual(values=c("DarkGoldenrod4", "Gold", "#7FFFD4",
"#FF6A6A"))
ggplot(mpg,aes(x=cty,y=hwy))+geom_point(aes(colour=factor(cyl),size=y
ear))+stat_smooth(method='lm')
ggplot(mpg,aes(x=cty,y=hwy))+geom_point(aes(colour=factor(cyl),size=year))+stat_smooth(method='lm')
ggplot(mpg,aes(x=cty,y=hwy))+geom_point(aes(colour=factor(cyl)))+stat_smooth(method='lm')+facet_grid(~year)
ggplot(mpg,aes(x=factor(year),y=hwy))+geom_boxplot(aes(fill=factor(year)))
ggplot(mpg,aes(x=factor(year),y=hwy))+geom_boxplot(aes(fill=factor(year)))+scale_fill_brewer('year',palette='Accent')
?scale_fill_brewer()
install.packages("swirl")
library(swirl)
getwd()
tmp <- read.table("lesson.txt",sep="\t")
tmp <- read.table("lesson8.txt",sep="\t")
data<-matrix(as.matrix(tmp),nrow(tmp)/3,3,byrow=TRUE)
data
colnames(data)<-c("time","ip","pv")
data
x<-scan("lesson8.txt",sep="\n",what=list("","",""))
data<-data.frame('data'=as.character(c(x[1],recursive=TRUE))
'ip'=as.numeric(c(x[2],recursive=TRUE))
'pv'=as.numeric(c(x[3],recursive=TRUE)))
x<-scan("lesson8.txt",sep="\n",what=list("","",""))
data<-data.frame('data'=as.character(c(x[1],recursive=TRUE))
'ip'=as.numeric(c(x[2],recursive=TRUE))
'pv'=as.numeric(c(x[3],recursive=TRUE)))
data<-data.frame('data'=as.character(c(x[1],recursive=TRUE)),
'ip'=as.numeric(c(x[2],recursive=TRUE)),
'pv'=as.numeric(c(x[3],recursive=TRUE)))
data
data<-as.Date(strptime(data[,1],"%a %b%d %H:%M:%S HKT %Y"))
ip<-as.numeric(data[,2])
tmp <- read.table("lesson8.txt",sep="\t")
data<-matrix(as.matrix(tmp),nrow(tmp)/3,3,byrow=TRUE)
colnames(data)<-c("time","ip","pv")
data<-as.Date(strptime(data[,1],"%a %b%d %H:%M:%S HKT %Y"))
ip<-as.numeric(data[,2])
data
tmp <- read.table("lesson8.txt",sep="\t")
data<-matrix(as.matrix(tmp),nrow(tmp)/3,3,byrow=TRUE)
colnames(data)<-c("time","ip","pv")
date<-as.Date(strptime(data[,1],"%a %b%d %H:%M:%S HKT %Y"))
ip<-as.numeric(data[,2])
pv<-as.numeric(data[,3])
ip
library(ggplot2)
qplot(date,pv,geom = c("line","point"),main="pv line",xlab="Date",ylab="pv")
pv
qplot(date,pv,geom = c("line","point"),main="pv line",xlab="Date",ylab="pv")
qplot(date, pv,geom =c("line","point"), main="pv line",xlab ="Date", ylab = "pv")
qplot(date,pv)
qplot(date,pv,data=data)
bb<-date.frame(date,pv)
bb<-data.frame(date,pv)
qplot(date,pv,data=bb)
tmp <- read.table("lesson8.txt",sep="\t")
data<-matrix(as.matrix(tmp),nrow(tmp)/3,3,byrow=TRUE)
colnames(data)<-c("time","ip","pv")
date<-as.Date(strptime(data[,1],"%a %b%d %H:%M:%S HKT %Y"))
ip<-as.numeric(data[,2])
pv<-as.numeric(data[,3])
library(ggplot2)
qplot(date,pv,geom = c("line","point"),main="pv line",xlab="Date",ylab="pv")
qplot(date, pv/ip,geom =c("line","point"), main="pv/ip line",xlab ="Date", ylab = "pv/ip")
ggplot(date,pv)+geom_line()+geom_point()
ggplot(aes(date,pv))+geom_line()+geom_point()
qplot(date,pv,geom = c("line"),main="pv line",xlab="Date",ylab="pv")
date
tmp <- read.table("lesson8.txt",sep="\t")
data<-matrix(as.matrix(tmp),nrow(tmp)/3,3,byrow=TRUE)
colnames(data)<-c("time","ip","pv")
date<-as.Date(strptime(data[,1],"%a %b%d %H:%M:%S HKT %Y"))
ip<-as.numeric(data[,2])
pv<-as.numeric(data[,3])
library(ggplot2)
date
date<-as.Date(strptime(data[,1],"%a %b%d %H:%M:%S HKT %Y"))
date
date=as.Date(strptime(data[,1], "%a %b%d %H:%M:%S HKT %Y"))
date
help("strptime")
tmp <- read.table("lesson8.txt",sep="\t")
data<-matrix(as.matrix(tmp),nrow(tmp)/3,3,byrow=TRUE)
colnames(data)<-c("time","ip","pv")
date<-data[,1]
ip<-as.numeric(data[,2])
pv<-as.numeric(data[,3])
library(ggplot2)
qplot(date,pv,geom = c("line","point"),main="pv line",xlab="Date",ylab="pv")
qplot(date, pv/ip,geom =c("line","point"), main="pv/ip line",xlab ="Date", ylab = "pv/ip")
pres_rating
presidents
str(presidents)
rating = as.numeric(presidents)
rating
year = as.numeric(floor(time(presidents)))
year
help(time)
?time
quarter = as,numeric(cycle(presidents))
quarter = as,numeric(cycle(presidents))
quarter = as.numeric(cycle(presidents))
quarter
pres_rating<-data.frame(rating = as.numeric(presidents),year = as.numeric(floor(time(presidents))),quarter = as.numeric(cycle(presidents)))
pres_rating
library(ggplot2)
p<-ggplot(pres_rating,aes(x=year,y=quarter,fill=rating))
p+geom_tile()
p+geom_raster()
q()
library(kniter)
installed.packages("kniter")
install.packages('kniter')
install.packages('kniter')
install.packages('knitr')
title: "Untitled"
## R Markdown
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
```{r}
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# Chunk 3: cars
summary(cars)
# Chunk 4: pressure
plot(pressure)
library(grid)
heart<-function(lcolor){
t=seq(0,2*pi,by=0.1)
x=16*sin(t)^3
y=13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)
a=(x-min(x))/(max(x)-min(x))
b=(y-min(y))/(max(y)-min(y))
grid.lines(a,b,gp=gpar(col=color,lty="solid",lwd=6))
}
heart("hotpink")
heart<-function(lcolor){
t=seq(0,2*pi,by=0.1)
x=16*sin(t)^3
y=13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t)
a=(x-min(x))/(max(x)-min(x))
b=(y-min(y))/(max(y)-min(y))
grid.lines(a,b,gp=gpar(col=lcolor,lty="solid",lwd=6))
}
heart("hotpink")
rose=function(){
grid.circle(x=0.5, y=0.5, r=0.5,gp=gpar(fill="red",lwd = 3))
vp <- viewport(.5, .5, w=.9, h=.9)
pushViewport(vp)
grid.polygon(x=c(0.08, .5, 0.94),y=c(.22, 1.03, .22),gp=gpar(lwd =
vp2 <- viewport(.5, .5, w=.4, h=.4)
pushViewport(vp2)
grid.circle(x=0.5, y=0.5, r=0.5,gp=gpar(fill="red",lwd = 3))
vp3 <- viewport(.5, .5, w=.9, h=.9,angle=180)
pushViewport(vp3)
grid.polygon(x=c(0.08, .5, 0.94),y=c(.22, 1.03, .22),gp=gpar(lwd = 3))}
rose()
nba<- read.csv("http://datasets.flowingdata.com/ppg2008.csv", sep=",")
nba <- nba[order(nba$PTS),]
row.names(nba) <- nba$Name
nba <- nba[,2:20] # or nba <- nba[,-1]
nba_matrix <- data.matrix(nba)
heatmap(nba_matrix, Rowv=NA, Colv=NA, col=cm.colors(256), revC=FALSE, scale='column')
heatmap(nba_matrix, Rowv=NA, Colv=NA, col=heat.colors(256), revC=FALSE, scale="column", margins=c(5,10))
biocLite(ALL)
install.packages("ALL")
source(“http://bioconductor.org/biocLite.R”)
source(“http://bioconductor.org/biocLite.R”)
source("https://bioconductor.org/biocLite.R")
library("BiocInstaller", lib.loc="~/R/win-library/3.3")
biocLite("ALL")
library(ALL)
biocLite("ALL")
library(ALL)
library(limma)
install.packages("limma")
biocLite("limma")
library(ggplot2)
library(ALL)
data("ALL")
library(limma)
eset<-ALL[,ALL$mol.biol%in%c("BCR/ABL","ALL1/AF4")]
eset
library(ggplot2)
library(ALL)
data("ALL")
library(limma)
eset<-ALL[,ALL$mol.biol%in%c("BCR/ABL","ALL1/AF4")]
eset
head(eset)
f <- factor(as.character(eset$mol.biol))
f
design<-model.matrix(~f)
design
design<-model.matrix(~f)
fit<-eBayes(lmFit(eset,design))
selected<-p.adjust(fit$p.value[,2])<0.001
esetSel<-eset[selected,]
dim(esetSel)
library(hgu95av2.db)
install.packages("hgu95av2.db")
biocLite("hgu95av2.db")
source("http://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite()
s
library("BiocInstaller", lib.loc="~/R/win-library/3.3")
biocLite("knitr")
library(knitr)
source("http://bioconductor.org/biocLite.R")
biocLite("knitr")
library(knitr)
url<-'http://data.earthquake.cn/datashare/globeEarthquake_csn.html'
tables<-readHTMLTable(url,stringsAsFactors=FALSE)
install.packages("XML")
library(XML)
url<-'http://data.earthquake.cn/datashare/globeEarthquake_csn.html'
tables<-readHTMLTable(url,stringsAsFactors=FALSE)
tables
?readHTMLTable()
tables<-readHTMLTable(url,stringsAsFactors=FALSE,encoding="UTF-8")
tables
data<-raw[,c(1,3,4)]
raw<-tables[[6]]
data<-raw[,c(1,3,4)]
data
names(data)<-c('date','lan','lon')
data$lan<-as.numeric(data$lan)
data$lon<-as.numeric(data$lon)
data$date<-as.Date(data$date,"%Y-%m;%d")
install.packages("ggmap")
ggmap(get_googlemap(center='china',zoom=4,maptype='terrain'),extend='device')+geom_point(data=data,aes(x=lon,y=lan),colour='red',alpha=0.4)+opts(legend.position='none')
library(ggmap)
library(ggplot2)
library(ggmap)
library("ggmap", lib.loc="~/R/win-library/3.3")
install.packages("ggmap")
library(ggmap)
inst
install.packages('RJSONIO')
library(RJSONIO)
library(ggmap)
install.packages('stringi')
library(stringi)
library(ggmap)
library(ggplot2)
ggmap(get_googlemap(center='china',zoom=4,maptype='terrain'),extend='device')+geom_point(data=data,aes(x=lon,y=lan),colour='red',alpha=0.4)+opts(legend.position='none')
ggmap(get_googlemap(center='china',zoom=4,maptype='terrain'),extend='device')+geom_point(data=data,aes(x=lon,y=lan),colour='red',alpha=0.4)
a<-c()
b<-c('AA','TT','CC')
for(i in 1:3){a=rbind(a,b)
write.table((a,file="test.txt"),qupte=F,row.names=F,col.names=F,append=T)}
for(i in 1:3){a=rbind(a,b)
write.table(a,file="test.txt",qupte=F,row.names=F,col.names=F,append=T)}
for(i in 1:3){a=rbind(a,b)
write.table(a,file="test.txt",quote=F,row.names=F,col.names=F,append=T)}
getwd()
for(i in 1:3){a=rbind(a,b)
write.table(a,file="test.txt",quote=F,row.names=F,col.names=F,append=T)}
library(devtools)
install.packages('devtools')
library(devtools)
help(devtools)
??devtools
install_github('sinhrks/ggfortify')
devtools::install_github("ggfortify")
library(installer)
library(installr)
require(installr)
updateR()
updateR()
mydata <- mtcars[,c("mpg","cyl","hp")]
dstats <- function(x)
{
print(x)
mpg_mean = mean(x$mpg)
mpg_sd = sd(x$mpg)
hp_mean = mean(x$hp)
hp_sd = sd(x$hp)
return (list(a = mpg_mean, b = mpg_sd,c = hp_mean, d = hp_sd))
}
mydata$cyl <- factor(mydata$cyl)
res <- by(mydata,mydata$cyl,dstats)
res
title: "Untitled"
title: "Untitled"
output: html_document
---
```{r setup, include=FALSE}
setwd("C:/Users/30908/Desktop/编程考核")
pdf("Distribution.pdf")
data <- read.table("01.plot.txt",header = T)
data1 <- data[c(1,2)]
data1$Variable <- rep(colnames(data1[2]),19)
colnames(data1)=c("Interval","Numbers","Variable")
data2 <- data[c(1,3)]
data2$Variable <- rep(colnames(data2[2],19))
colnames(data2)=c("Interval","Numbers","Variable")
data3 <- data[c(1,4)]
data1$Variable <- rep(colnames(data1[2]),19)
colnames(data1)=c("Interval","Numbers","Variable")
data4 <- data[c(1,5)]
data1$Variable <- rep(colnames(data1[2]),19)
colnames(data1)=c("Interval","Numbers","Variable")
data_all <- rbind(data1,data2,data3,data4)
library(ggplot2)
p <- ggplot(data_all,aes(Interval,weight=Numbers,fill=Variable))
p <- p + geom_bar(position = "dodge")
p <- p + ggtitle("Length Distribution") + xlab("Length Interval") + ylab("Numbers")
p
dev.off()
setwd("C:/Users/30908/Desktop/编程考核")
pdf("Distribution.pdf")
data <- read.table("01.plot.txt",header = T)
data1 <- data[c(1,2)]
data1$Variable <- rep(colnames(data1[2]),19)
colnames(data1)=c("Interval","Numbers","Variable")
data2 <- data[c(1,3)]
data2$Variable <- rep(colnames(data2[2],19))
colnames(data2)=c("Interval","Numbers","Variable")
data3 <- data[c(1,4)]
data1$Variable <- rep(colnames(data1[2]),19)
colnames(data3)=c("Interval","Numbers","Variable")
data4 <- data[c(1,5)]
data1$Variable <- rep(colnames(data1[2]),19)
colnames(data4)=c("Interval","Numbers","Variable")
data_all <- rbind(data1,data2,data3,data4)
library(ggplot2)
p <- ggplot(data_all,aes(Interval,weight=Numbers,fill=Variable))
p <- p + geom_bar(position = "dodge")
p <- p + ggtitle("Length Distribution") + xlab("Length Interval") + ylab("Numbers")
p
dev.off()
setwd("C:/Users/30908/Desktop/编程考核")
pdf("Distribution.pdf")
data <- read.table("01.plot.txt",header = T)
data1 <- data[c(1,2)]
data1$Variable <- rep(colnames(data1[2]),19)
colnames(data1)=c("Interval","Numbers","Variable")
data2 <- data[c(1,3)]
data2$Variable <- rep(colnames(data2[2],19))
data <- read.table("01.plot.txt",header = T)
colnames(data2)=c("Interval","Numbers","Variable")
data3 <- data[c(1,4)]
data1$Variable <- rep(colnames(data1[2]),19)
colnames(data3)=c("Interval","Numbers","Variable")
data3 <- data[c(1,4)]
data1$Variable <- rep(colnames(data1[2]),len(data2))
setwd("C:/Users/30908/Desktop/编程考核")
pdf("Distribution.pdf")
data <- read.table("01.plot.txt",header = T)
data1 <- data[c(1,2)]
data1$Variable <- rep(colnames(data1[2]),19)
colnames(data1)=c("Interval","Numbers","Variable")
data2 <- data[c(1,3)]
data2$Variable <- rep(colnames(data2[2],19))
colnames(data2)=c("Interval","Numbers","Variable")
data3 <- data[c(1,4)]
data1$Variable <- rep(colnames(data3[2]),len(data))
colnames(data3)=c("Interval","Numbers","Variable")
data4 <- data[c(1,5)]
data1$Variable <- rep(colnames(data4[2]),19)
colnames(data4)=c("Interval","Numbers","Variable")
data_all <- rbind(data1,data2,data3,data4)
library(ggplot2)
p <- ggplot(data_all,aes(Interval,weight=Numbers,fill=Variable))
p <- p + geom_bar(position = "dodge")
p <- p + ggtitle("Length Distribution") + xlab("Length Interval") + ylab("Numbers")
p
dev.off()
setwd("C:/Users/30908/Desktop/编程考核")
pdf("Distribution.pdf")
data <- read.table("01.plot.txt",header = T)
data1 <- data[c(1,2)]
data1$Variable <- rep(colnames(data1[2]),19)
colnames(data1)=c("Interval","Numbers","Variable")
data2 <- data[c(1,3)]
data2$Variable <- rep(colnames(data2[2],19))
colnames(data2)=c("Interval","Numbers","Variable")
data3 <- data[c(1,4)]
data3$Variable <- rep(colnames(data3[2]),len(data))
colnames(data3)=c("Interval","Numbers","Variable")
data4 <- data[c(1,5)]
data4$Variable <- rep(colnames(data4[2]),19)
colnames(data4)=c("Interval","Numbers","Variable")
data_all <- rbind(data1,data2,data3,data4)
library(ggplot2)
p <- ggplot(data_all,aes(Interval,weight=Numbers,fill=Variable))
p <- p + geom_bar(position = "dodge")
p <- p + ggtitle("Length Distribution") + xlab("Length Interval") + ylab("Numbers")
p
dev.off()
setwd("C:/Users/30908/Desktop/编程考核")
pdf("Distribution.pdf")
data <- read.table("01.plot.txt",header = T)
data1 <- data[c(1,2)]
data1$Variable <- rep(colnames(data1[2]),19)
colnames(data1)=c("Interval","Numbers","Variable")
data2 <- data[c(1,3)]
data2$Variable <- rep(colnames(data2[2],19))
colnames(data2)=c("Interval","Numbers","Variable")
data3 <- data[c(1,4)]
data3$Variable <- rep(colnames(data3[2]),19)
colnames(data3)=c("Interval","Numbers","Variable")
data4 <- data[c(1,5)]
data4$Variable <- rep(colnames(data4[2]),19)
colnames(data4)=c("Interval","Numbers","Variable")
data_all <- rbind(data1,data2,data3,data4)
library(ggplot2)
p <- ggplot(data_all,aes(Interval,weight=Numbers,fill=Variable))
p <- p + geom_bar(position = "dodge")
p <- p + ggtitle("Length Distribution") + xlab("Length Interval") + ylab("Numbers")
p
dev.off()
